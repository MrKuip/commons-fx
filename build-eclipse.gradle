import groovy.xml.*

eclipse.classpath
{
  downloadSources = true
  downloadJavadoc = true
}

tasks.named("eclipse").configure {
    dependsOn gradle.includedBuilds*.task(":eclipse")
}

tasks.named("cleanEclipse").configure {
    dependsOn gradle.includedBuilds*.task(":cleanEclipse")
}

eclipse.classpath.file 
{
  // Fix the problem that this plugin doesn't put libraries on the module path (it puts them on the classpath)
  whenMerged 
  {
    entries.findAll { entry -> isModule(entry) }.each { entry -> entry.entryAttributes['module'] = 'true' }
  }
}

boolean isModule(entry) {
  // Only libraries can be modules
  if(entry == null || !entry.kind.equals("lib"))
  {
    return false;
  }

  // Test libraries should not be imported as modules because eclipse then 
  // needs the library be 'required' in module-info.java
  if ("true".equals(entry.entryAttributes['test']))
  {
    return false;
  }

  // All libraries that contain the module-info.class should be imported as modules!
  def moduleDescription = "jar --file $entry.path --describe-module".execute().text
  if( moduleDescription.contains('module-info.class'))
  {
    return true;
  }

  return false;
}

